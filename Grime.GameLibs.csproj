<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <GameVersion>1.3.5</GameVersion>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework>net48</TargetFramework>
    <PackageVersion>2.0.0-grime$(GameVersion)</PackageVersion>
    <Authors>BadMagic</Authors>
    <Description>The game libraries used for modding GRIME</Description>
    <PackageTags>GRIME modding bepinex5</PackageTags>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <NoDefaultExcludes>true</NoDefaultExcludes>
    <PackageReadmeFile>doc/README.md</PackageReadmeFile>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <!--
    NuGet complains about using the /ref/ path in packages because it doesn't work for projects using packages.config.
    However we do not care about this and would rather declutter our users' build directories at the cost of "forcing"
    the usage of PackageReference.
    -->
    <NoWarn>NU5131</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.2" ExcludeAssets="all" GeneratePathProperty="true"/>
    <PackageReference Include="MonoMod.RuntimeDetour.HookGen" Version="22.7.31.1" PrivateAssets="all"/>
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="**/*"/>
    <Content Include="ref/$(GameVersion)/*" Exclude="ref/$(GameVersion)/AD_*" Pack="true" PackagePath="ref/$(TargetFramework)"/>
    <GameFiles Include="ref/$(GameVersion)/AD_*" Publicize="true" Strip="true"/>
  </ItemGroup>

  <ItemGroup>
    <None Include="README.md" Pack="true" PackagePath="doc/"/>
  </ItemGroup>

  <UsingTask TaskName="PublicizeTask" AssemblyFile="$(PkgBepInEx_AssemblyPublicizer_MSBuild)/lib/net472/BepInEx.AssemblyPublicizer.MSBuild.dll"/>
  <Target Name="Publicize" AfterTargets="ResolveReferences" BeforeTargets="FindReferenceAssembliesForReferences">
    <PropertyGroup>
      <GeneratedIgnoresAccessChecksToFile>$(IntermediateOutputPath)$(MSBuildProjectName).IgnoresAccessChecksTo.cs</GeneratedIgnoresAccessChecksToFile>
    </PropertyGroup>

    <PublicizeTask IntermediateOutputPath="$(IntermediateOutputPath)" 
            GeneratedIgnoresAccessChecksToFile="$(GeneratedIgnoresAccessChecksToFile)"
            ReferencePath="@(GameFiles)"
            PackageReference=""
            Publicize="">
        <Output TaskParameter="PublicizedReferences" ItemName="PublicizedReferences"/>
    </PublicizeTask>

    <ItemGroup>
      <Content Include="@(PublicizedReferences)" Pack="true" PackagePath="ref/$(TargetFramework)"/>
    </ItemGroup>
  </Target>

  <Target Name="HookGen" AfterTargets="PostBuildEvent" Outputs="%(GameFiles.Identity)">
    <PropertyGroup>
      <Mono Condition="$(OS) == WINDOWS_NT"/>
      <Mono Condition="$(OS) != WINDOWS_NT">mono</Mono>
      <HookFileName>MMHOOK_%(GameFiles.FileName).dll</HookFileName>
    </PropertyGroup>

    <Exec WorkingDirectory="$(TargetDir)" 
            Command="$(Mono) MonoMod.RuntimeDetour.HookGen.exe --private &quot;$(ProjectDir)%(GameFiles.Identity)&quot; $(HookFileName)"/>
    <ItemGroup>
      <Content Include="$(TargetDir)/$(HookFileName)" Pack="true" PackagePath="ref/$(TargetFramework)"/>
    </ItemGroup>
  </Target>

</Project>